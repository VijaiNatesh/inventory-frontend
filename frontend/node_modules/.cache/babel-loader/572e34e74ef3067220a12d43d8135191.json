{"ast":null,"code":"import axios from 'axios';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, FETCH_USERS_REQUEST, FETCH_USERS_SUCCESS, FETCH_USERS_FAIL, FETCH_USERBILL_REQUEST, FETCH_USERBILL_SUCCESS, FETCH_USERBILL_FAIL } from '../actionTypes'; // Register User\n\nexport const userRegister = (name, email, password) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST\n      });\n      const config = {\n        headers: {\n          'content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/user/userregister\", {\n        name,\n        email,\n        password\n      }, config);\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userAuthData', JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const loginUser = (email, password) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: USER_LOGIN_REQUEST\n      });\n      const config = {\n        headers: {\n          content_Type: \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/user/login\", {\n        email,\n        password\n      }, config);\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem('userAuthData', JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const logoutUser = () => {\n  return async dispatch => {\n    localStorage.removeItem('userAuthData');\n\n    try {\n      dispatch({\n        type: USER_LOGOUT\n      });\n    } catch (error) {}\n  };\n};\nexport const fetchProfile = () => {\n  return async (dispatch, getState) => {\n    const {\n      usersInfo\n    } = getState().user;\n    const id = usersInfo._id;\n\n    try {\n      dispatch({\n        type: FETCH_USERS_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          content_Type: 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/user/purchase/${id}`, config);\n      dispatch({\n        type: FETCH_USERS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_USERS_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/React/Inventory/frontend/src/redux/actions/user/userAction.js"],"names":["axios","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAIL","FETCH_USERBILL_REQUEST","FETCH_USERBILL_SUCCESS","FETCH_USERBILL_FAIL","userRegister","name","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","loginUser","content_Type","logoutUser","removeItem","fetchProfile","getState","usersInfo","user","id","_id","loading","get"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS_FAIL,\r\n    FETCH_USERBILL_REQUEST,\r\n    FETCH_USERBILL_SUCCESS,\r\n    FETCH_USERBILL_FAIL\r\n} from '../actionTypes';\r\n\r\n// Register User\r\nexport const userRegister = (name, email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: USER_REGISTER_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.post(\"http://localhost:5000/api/user/userregister\",\r\n                { name, email, password }, config)\r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userAuthData', JSON.stringify(data));\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: USER_REGISTER_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: USER_LOGIN_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { content_Type: \"application/json\" }\r\n            }\r\n            const { data } = await axios.post(\"http://localhost:5000/api/user/login\",\r\n                { email, password }, config)\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: data\r\n            })\r\n            localStorage.setItem('userAuthData', JSON.stringify(data));\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return async dispatch => {\r\n      localStorage.removeItem('userAuthData');\r\n      try {\r\n        dispatch({\r\n          type: USER_LOGOUT,\r\n        });\r\n      } catch (error) {}\r\n    };\r\n  };\r\n\r\n\r\n  export const fetchProfile = () => {\r\n    return async (dispatch, getState) => {  \r\n        const {usersInfo} = getState().user \r\n        const id = usersInfo._id\r\n      try {\r\n        dispatch({\r\n          type: FETCH_USERS_REQUEST,\r\n          loading: true,\r\n        });\r\n        const config = {\r\n          headers: {\r\n           content_Type: 'application/json'\r\n            }\r\n        };\r\n        const { data } = await axios.get(`http://localhost:5000/api/user/purchase/${id}`, config);\r\n        dispatch({\r\n          type: FETCH_USERS_SUCCESS,\r\n          payload: data,\r\n        });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: FETCH_USERS_FAIL,\r\n          error: error.response && error.response.data.message,\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\n "]},"metadata":{},"sourceType":"module"}