{"ast":null,"code":"import { CREATE_BOOK_REQUEST, CREATE_BOOK_SUCCESS, CREATE_BOOK_FAIL, FETCH_BOOK_REQUEST, FETCH_BOOK_SUCCESS, FETCH_BOOK_FAIL } from \"../actionTypes\";\nimport axios from \"axios\";\n\nconst createBookAction = (category, author, title) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_BOOK_REQUEST\n      });\n      const config = {\n        'Content-Type': 'application/json'\n      };\n      const {\n        data\n      } = await axios.post('/api/books', {\n        category,\n        author,\n        title\n      }, config);\n      dispatch({\n        type: CREATE_BOOK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_BOOK_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\n\nconst fetchBooks = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCH_BOOK_REQUEST\n      });\n      const config = {\n        'Content-Type': 'application/json'\n      };\n      const {\n        data\n      } = await axios.get('/api/books', config);\n      dispatch({\n        type: FETCH_BOOK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_BOOK_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\n\nconst deleteBook = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_BOOK_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.delete(`/api/books/${id}`, config);\n      dispatch({\n        type: DELETE_BOOK_SUCCESS,\n        payload: data\n      });\n      dispatch({\n        type: FETCH_BOOK_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_BOOK_FAIL,\n        loading: false,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};\n\nexport { createBookAction, fetchBooks, deleteBook };","map":{"version":3,"sources":["D:/React/Book/frontend/src/redux/actions/books/booksAction.js"],"names":["CREATE_BOOK_REQUEST","CREATE_BOOK_SUCCESS","CREATE_BOOK_FAIL","FETCH_BOOK_REQUEST","FETCH_BOOK_SUCCESS","FETCH_BOOK_FAIL","axios","createBookAction","category","author","title","dispatch","type","config","data","post","payload","error","response","message","fetchBooks","get","deleteBook","id","DELETE_BOOK_REQUEST","loading","headers","delete","DELETE_BOOK_SUCCESS","DELETE_BOOK_FAIL"],"mappings":"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","sourcesContent":["import { CREATE_BOOK_REQUEST, \r\n    CREATE_BOOK_SUCCESS, \r\n    CREATE_BOOK_FAIL, \r\n    FETCH_BOOK_REQUEST, \r\n    FETCH_BOOK_SUCCESS, \r\n    FETCH_BOOK_FAIL } from \"../actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst createBookAction = (category, author, title) => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch ({\r\n                type: CREATE_BOOK_REQUEST\r\n            })\r\n            const config = {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            const {data} = await axios.post('/api/books', {category, author, title}, config)\r\n    \r\n            dispatch({\r\n                type:CREATE_BOOK_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error){\r\n            dispatch({\r\n                type: CREATE_BOOK_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst fetchBooks = () => {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({\r\n                type: FETCH_BOOK_REQUEST\r\n            })\r\n            const config = {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            const {data} = await axios.get('/api/books', config)\r\n            dispatch({\r\n                type: FETCH_BOOK_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n        }\r\n        catch(error){\r\n            dispatch({\r\n                type:FETCH_BOOK_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }    \r\n}\r\n\r\nconst deleteBook = id => {\r\n    return async dispatch => {\r\n      try {\r\n        dispatch({\r\n          type: DELETE_BOOK_REQUEST,\r\n          loading: true,\r\n        });\r\n  \r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        };\r\n        const { data } = await axios.delete(`/api/books/${id}`, config);\r\n        dispatch({\r\n          type: DELETE_BOOK_SUCCESS,\r\n          payload: data,\r\n        });\r\n  \r\n        dispatch({\r\n          type: FETCH_BOOK_SUCCESS,\r\n        });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: DELETE_BOOK_FAIL,\r\n          loading: false,\r\n          error: error.response && error.response.data.message,\r\n        });\r\n      }\r\n    };\r\n  };\r\n  \r\n\r\nexport {createBookAction, fetchBooks, deleteBook}"]},"metadata":{},"sourceType":"module"}