{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Inventory\\\\frontend\\\\src\\\\component\\\\Bill\\\\AddBill.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPurchase } from '../../redux/actions/purchase/purchaseAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddBill() {\n  _s();\n\n  const [itemId, setItemId] = useState(\" \"); //const [itemName, setItemName] = useState(\" \")\n\n  const [quantity, setQuantity] = useState(0); // const [unitCost, setUnitCost] = useState(0)\n  //const [unitPrice, setUnitPrice] = useState(0)   \n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPurchase());\n  }, [dispatch]);\n  const purchaseList = useSelector(state => state.purchase);\n  const {\n    purchases\n  } = purchaseList;\n  console.log(purchases);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"w-50 mx-auto\",\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2 \",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Item Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter the Item ID\",\n          value: itemId,\n          onChange: e => setItemId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2 \",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          size: \"sm\",\n          placeholder: \"Quantity\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), purchases ? /*#__PURE__*/_jsxDEV(Table, {\n        className: \"w-75 mx-auto\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Item Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Unit Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: purchases && purchases.map(purchase => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: purchase.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: purchase.unitPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: quantity * purchase.unitPrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)]\n            }, purchase.itemId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this) : \"No Items Purchased\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddBill, \"3VGssdHAfYAvgsSP8aVQhcuM4fU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddBill;\nexport default AddBill;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBill\");","map":{"version":3,"sources":["D:/React/Inventory/frontend/src/component/Bill/AddBill.js"],"names":["React","useState","useEffect","Form","Button","Table","useDispatch","useSelector","fetchPurchase","AddBill","itemId","setItemId","quantity","setQuantity","dispatch","purchaseList","state","purchase","purchases","console","log","formSubmitHandler","e","preventDefault","target","value","map","itemName","unitPrice"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport {Form, Button, Table} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchPurchase} from '../../redux/actions/purchase/purchaseAction'\r\n\r\nfunction AddBill() {\r\n    const [itemId, setItemId] = useState(\" \")\r\n    //const [itemName, setItemName] = useState(\" \")\r\n    const [quantity, setQuantity] = useState(0) \r\n   // const [unitCost, setUnitCost] = useState(0)\r\n   //const [unitPrice, setUnitPrice] = useState(0)   \r\n   \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchPurchase())\r\n    }, [dispatch])\r\n\r\n    const purchaseList = useSelector(state => state.purchase)\r\n    const {purchases} = purchaseList;\r\n    console.log(purchases)\r\n\r\n    const formSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n            <Form className = \"w-50 mx-auto\" onSubmit = {formSubmitHandler} >\r\n                <Form.Group className=\"mb-2 \" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Item Id</Form.Label>\r\n                    <Form.Control                    \r\n                    type=\"text\" \r\n                    size = \"sm\" \r\n                    placeholder=\"Enter the Item ID\"\r\n                    value = {itemId}\r\n                    onChange = {(e) => setItemId(e.target.value)} />                    \r\n                </Form.Group>\r\n\r\n                {/* <Form.Group className=\"mb-2 \" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Item Name</Form.Label>\r\n                    <Form.Control                    \r\n                    type=\"text\" \r\n                    size = \"sm\" \r\n                    placeholder=\"Enter the Item Name\"\r\n                    value = {itemName}\r\n                    onChange = {(e) => setItemName(e.target.value)} />                    \r\n                </Form.Group> */}\r\n\r\n                <Form.Group className=\"mb-2 \" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Quantity</Form.Label>\r\n                    <Form.Control                   \r\n                    type=\"number\" \r\n                    size = \"sm\" \r\n                    placeholder=\"Quantity\"\r\n                    value = {quantity}\r\n                    onChange = {(e) => setQuantity(e.target.value)} />                    \r\n                </Form.Group>   \r\n\r\n                 {/* <Form.Group className=\"mb-2 \" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Unit Cost</Form.Label>\r\n                    <Form.Control                   \r\n                    type=\"number\" \r\n                    size = \"sm\" \r\n                    placeholder=\"Unit Cost\"\r\n                    value = {unitCost}\r\n                    onChange = {(e) => setUnitCost(e.target.value)} />                    \r\n                </Form.Group>     */}\r\n\r\n                {/* <Form.Group className=\"mb-2 \" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Unit Price</Form.Label>\r\n                    <Form.Control                   \r\n                    type=\"number\" \r\n                    size = \"sm\" \r\n                    placeholder=\"Unit Price\"\r\n                    value = {unitPrice}\r\n                    onChange = {(e) => setUnitPrice(e.target.value)} />                    \r\n                </Form.Group>                       */}\r\n\r\n                \r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n\r\n                {purchases ? (\r\n                <Table className = \"w-75 mx-auto\" striped bordered hover>\r\n                <thead>\r\n                    <tr>                                          \r\n                        <th>Item Name</th>                       \r\n                        <th>Quantity</th>\r\n                        <th>Unit Price</th>                       \r\n                        <th>Total Amount</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {purchases && purchases.map((purchase) => {\r\n                        return(\r\n                        <tr key = {purchase.itemId}>              \r\n                            <td>{purchase.itemName}</td>                           \r\n                            <td>{quantity}</td>                      \r\n                            <td>{purchase.unitPrice}</td>                           \r\n                            <td>{quantity* purchase.unitPrice}</td>\r\n                        </tr>\r\n                        )                   \r\n                    })}                    \r\n                </tbody>\r\n            </Table>\r\n            ) : (\r\n                \"No Items Purchased\"\r\n            ) }  \r\n            </Form>\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddBill\r\n"]},"metadata":{},"sourceType":"module"}