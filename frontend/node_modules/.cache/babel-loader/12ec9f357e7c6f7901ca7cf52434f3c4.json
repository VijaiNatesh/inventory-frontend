{"ast":null,"code":"import axios from \"axios\";\nimport { PURCHASE_ADDITEM_REQUEST, PURCHASE_ADDITEM_SUCCESS, PURCHASE_ADDITEM_FAIL, PURCHASE_FETCH_REQUEST, PURCHASE_FETCH_SUCCESS, PURCHASE_FETCH_FAIL, PURCHASE_UPDATE_REQUEST, PURCHASE_UPDATE_SUCCESS, PURCHASE_UPDATE_FAIL, PURCHASE_DETAIL_REQUEST, PURCHASE_DETAIL_SUCCESS, PURCHASE_DETAIL_FAIL, PURCHASE_DELETE_REQUEST, PURCHASE_DELETE_SUCCESS, PURCHASE_DELETE_FAIL } from \"../actionTypes\"; // Create Item\n\nexport const createItem = (itemName, productKey, quantity, unitPrice, unitCost, createdBy) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_ADDITEM_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/purchase/additem', {\n        itemName,\n        productKey,\n        quantity,\n        unitPrice,\n        unitCost,\n        createdBy\n      }, config);\n      dispatch({\n        type: PURCHASE_ADDITEM_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_ADDITEM_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const fetchPurchase = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_FETCH_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/purchase/allitems', config);\n      dispatch({\n        type: PURCHASE_FETCH_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_FETCH_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const fetchPurchaseDetail = (id, purchaseData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_DETAIL_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/purchase/${id}`, purchaseData, config);\n      dispatch({\n        type: PURCHASE_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_DETAIL_FAIL,\n        loading: false,\n        error: error.response && error.response.data.messag\n      });\n    }\n  };\n};\nexport const updatePurchase = (id, purchaseData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_UPDATE_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.put(`http://localhost:5000/api/purchase/${id}`, purchaseData, config);\n      dispatch({\n        type: PURCHASE_UPDATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_UPDATE_FAIL,\n        loading: false,\n        error: error.response && error.response.data.messag\n      });\n    }\n  };\n};\nexport const deletePurchase = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_DELETE_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.delete(`http://localhost:5000/api/purchase/${id}`, config);\n      dispatch({\n        type: PURCHASE_DELETE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_DELETE_FAIL,\n        loading: false,\n        error: error.response && error.response.data.messag\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/React/Inventory/frontend/src/redux/actions/purchase/purchaseAction.js"],"names":["axios","PURCHASE_ADDITEM_REQUEST","PURCHASE_ADDITEM_SUCCESS","PURCHASE_ADDITEM_FAIL","PURCHASE_FETCH_REQUEST","PURCHASE_FETCH_SUCCESS","PURCHASE_FETCH_FAIL","PURCHASE_UPDATE_REQUEST","PURCHASE_UPDATE_SUCCESS","PURCHASE_UPDATE_FAIL","PURCHASE_DETAIL_REQUEST","PURCHASE_DETAIL_SUCCESS","PURCHASE_DETAIL_FAIL","PURCHASE_DELETE_REQUEST","PURCHASE_DELETE_SUCCESS","PURCHASE_DELETE_FAIL","createItem","itemName","productKey","quantity","unitPrice","unitCost","createdBy","dispatch","type","config","headers","data","post","payload","error","response","message","fetchPurchase","get","fetchPurchaseDetail","id","purchaseData","loading","messag","updatePurchase","put","deletePurchase","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n    PURCHASE_ADDITEM_REQUEST,\r\n    PURCHASE_ADDITEM_SUCCESS,\r\n    PURCHASE_ADDITEM_FAIL,\r\n    PURCHASE_FETCH_REQUEST,\r\n    PURCHASE_FETCH_SUCCESS,\r\n    PURCHASE_FETCH_FAIL,\r\n    PURCHASE_UPDATE_REQUEST,\r\n    PURCHASE_UPDATE_SUCCESS,\r\n    PURCHASE_UPDATE_FAIL,\r\n    PURCHASE_DETAIL_REQUEST,\r\n    PURCHASE_DETAIL_SUCCESS,\r\n    PURCHASE_DETAIL_FAIL,\r\n    PURCHASE_DELETE_REQUEST,\r\n    PURCHASE_DELETE_SUCCESS,\r\n    PURCHASE_DELETE_FAIL\r\n} from \"../actionTypes\";\r\n\r\n// Create Item\r\nexport const createItem = (itemName, productKey, quantity, unitPrice, unitCost, createdBy) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_ADDITEM_REQUEST,\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.post('http://localhost:5000/api/purchase/additem',\r\n                { itemName, productKey, quantity, unitPrice, unitCost, createdBy},\r\n                config)\r\n            dispatch({\r\n                type: PURCHASE_ADDITEM_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_ADDITEM_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchPurchase = () => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_FETCH_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.get('http://localhost:5000/api/purchase/allitems', config)\r\n            dispatch({\r\n                type: PURCHASE_FETCH_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_FETCH_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchPurchaseDetail = (id, purchaseData) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_DETAIL_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.get(`http://localhost:5000/api/purchase/${id}`,\r\n                purchaseData, config)\r\n            dispatch({\r\n                type: PURCHASE_DETAIL_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_DETAIL_FAIL,\r\n                loading: false,\r\n                error: error.response && error.response.data.messag\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePurchase = (id, purchaseData) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_UPDATE_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.put(`http://localhost:5000/api/purchase/${id}`,\r\n                purchaseData, config)\r\n            dispatch({\r\n                type: PURCHASE_UPDATE_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_UPDATE_FAIL,\r\n                loading: false,\r\n                error: error.response && error.response.data.messag\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deletePurchase = (id) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_DELETE_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.delete(`http://localhost:5000/api/purchase/${id}`,\r\n                config)\r\n            dispatch({\r\n                type: PURCHASE_DELETE_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_DELETE_FAIL,\r\n                loading: false,\r\n                error: error.response && error.response.data.messag\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}