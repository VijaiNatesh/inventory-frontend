{"ast":null,"code":"import axios from \"axios\";\nimport { PURCHASE_ADDITEM_REQUEST, PURCHASE_ADDITEM_SUCCESS, PURCHASE_ADDITEM_FAIL, PURCHASE_FETCH_REQUEST, PURCHASE_FETCH_SUCCESS, PURCHASE_FETCH_FAIL, PURCHASE_UPDATE_REQUEST, PURCHASE_UPDATE_SUCCESS, PURCHASE_UPDATE_FAIL, PURCHASE_DETAIL_REQUEST, PURCHASE_DETAIL_SUCCESS, PURCHASE_DETAIL_FAIL } from \"../actionTypes\"; // Create Item\n\nexport const createItem = (itemName, productKey, quantity, unitPrice, unitCost) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_ADDITEM_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/purchase/additem', {\n        itemName,\n        productKey,\n        quantity,\n        unitPrice,\n        unitCost\n      }, config);\n      dispatch({\n        type: PURCHASE_ADDITEM_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_ADDITEM_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const fetchPurchase = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_FETCH_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/purchase/allitems', config);\n      dispatch({\n        type: PURCHASE_FETCH_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_FETCH_FAIL,\n        payload: error.response && error.response.data.message\n      });\n    }\n  };\n};\nexport const fetchPurchaseDetail = (id, purchaseData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_DETAIL_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/api/purchase/${id}`, {\n        purchaseData\n      }, config);\n      dispatch({\n        type: PURCHASE_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_DETAIL_FAIL,\n        loading: false,\n        error: error.response && error.response.data.messag\n      });\n    }\n  };\n};\nexport const updatePurchase = (id, purchaseData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PURCHASE_UPDATE_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.put(`http://localhost:5000/api/purchase/editpurchase/${id}`, {\n        purchaseData\n      }, config);\n      dispatch({\n        type: PURCHASE_UPDATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PURCHASE_UPDATE_FAIL,\n        loading: false,\n        error: error.response && error.response.data.messag\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/React/Inventory/frontend/src/redux/actions/purchase/purchaseAction.js"],"names":["axios","PURCHASE_ADDITEM_REQUEST","PURCHASE_ADDITEM_SUCCESS","PURCHASE_ADDITEM_FAIL","PURCHASE_FETCH_REQUEST","PURCHASE_FETCH_SUCCESS","PURCHASE_FETCH_FAIL","PURCHASE_UPDATE_REQUEST","PURCHASE_UPDATE_SUCCESS","PURCHASE_UPDATE_FAIL","PURCHASE_DETAIL_REQUEST","PURCHASE_DETAIL_SUCCESS","PURCHASE_DETAIL_FAIL","createItem","itemName","productKey","quantity","unitPrice","unitCost","dispatch","type","config","headers","data","post","payload","error","response","message","fetchPurchase","get","fetchPurchaseDetail","id","purchaseData","loading","messag","updatePurchase","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { PURCHASE_ADDITEM_REQUEST, PURCHASE_ADDITEM_SUCCESS, PURCHASE_ADDITEM_FAIL, PURCHASE_FETCH_REQUEST, PURCHASE_FETCH_SUCCESS, PURCHASE_FETCH_FAIL, PURCHASE_UPDATE_REQUEST, PURCHASE_UPDATE_SUCCESS, PURCHASE_UPDATE_FAIL, PURCHASE_DETAIL_REQUEST, PURCHASE_DETAIL_SUCCESS, PURCHASE_DETAIL_FAIL } from \"../actionTypes\";\r\n\r\n// Create Item\r\nexport const createItem = (itemName, productKey, quantity, unitPrice, unitCost) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_ADDITEM_REQUEST,\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.post('http://localhost:5000/api/purchase/additem',\r\n                { itemName, productKey, quantity, unitPrice, unitCost },\r\n                config)\r\n            dispatch({\r\n                type: PURCHASE_ADDITEM_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_ADDITEM_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchPurchase = () => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_FETCH_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.get('http://localhost:5000/api/purchase/allitems', config)\r\n            dispatch({\r\n                type: PURCHASE_FETCH_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_FETCH_FAIL,\r\n                payload: error.response && error.response.data.message\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchPurchaseDetail = (id, purchaseData) => {\r\n    return async dispatch => {\r\n        try{\r\n            dispatch({\r\n                type: PURCHASE_DETAIL_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const {data} = await axios.get(`http://localhost:5000/api/purchase/${id}`,\r\n                {purchaseData}, config)\r\n            dispatch({\r\n                type: PURCHASE_DETAIL_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n        }\r\n        catch(error){\r\n            dispatch({\r\n                type: PURCHASE_DETAIL_FAIL,\r\n                loading: false,\r\n                error: error.response && error.response.data.messag\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePurchase = (id, purchaseData) => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: PURCHASE_UPDATE_REQUEST\r\n            })\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const { data } = await axios.put(`http://localhost:5000/api/purchase/editpurchase/${id}`,\r\n                { purchaseData }, config)\r\n            dispatch({\r\n                type: PURCHASE_UPDATE_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: PURCHASE_UPDATE_FAIL,\r\n                loading: false,\r\n                error: error.response && error.response.data.messag\r\n            })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}