{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { purchaseReducer } from \"../reducer/purchase/purchaseReducer\";\nimport { billReducer } from \"../reducer/bill/billReducer\";\nimport { userReducer } from \"../reducer/user/userReducer\";\nconst middleware = [thunk];\nconst reducer = combineReducers({\n  purchase: purchaseReducer,\n  bill: billReducer,\n  user: userReducer\n});\nconst userAuthFromStorage = localStorage.getItem('userAuthData') ? JSON.parse(localStorage.getItem('userAuthData')) : null;\nconst initialState = {\n  user: {\n    usersInfo: userAuthFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/React/Inventory/frontend/src/redux/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","purchaseReducer","billReducer","userReducer","middleware","reducer","purchase","bill","user","userAuthFromStorage","localStorage","getItem","JSON","parse","initialState","usersInfo","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AAIA,MAAMM,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,QAAQ,EAAEL,eADkB;AAE5BM,EAAAA,IAAI,EAAEL,WAFsB;AAG5BM,EAAAA,IAAI,EAAEL;AAHsB,CAAD,CAA/B;AAMA,MAAMM,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBN,EAAAA,IAAI,EAAE;AAAEO,IAAAA,SAAS,EAAEN;AAAb;AADa,CAArB;AAKA,MAAMO,KAAK,GAAGpB,WAAW,CACrBS,OADqB,EAErBS,YAFqB,EAGrBd,mBAAmB,CAACF,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAHE,CAAzB;AAOA,eAAeY,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport { purchaseReducer } from \"../reducer/purchase/purchaseReducer\";\r\nimport { billReducer } from \"../reducer/bill/billReducer\";\r\nimport { userReducer } from \"../reducer/user/userReducer\";\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    purchase: purchaseReducer,\r\n    bill: billReducer,\r\n    user: userReducer  \r\n})\r\n\r\nconst userAuthFromStorage = localStorage.getItem('userAuthData')\r\n  ? JSON.parse(localStorage.getItem('userAuthData'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  user: { usersInfo: userAuthFromStorage },\r\n};\r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}