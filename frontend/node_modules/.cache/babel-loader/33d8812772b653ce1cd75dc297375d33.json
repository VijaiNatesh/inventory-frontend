{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createBookReducer } from \"../reducers/book/createBookReducer\";\nimport { bookListReducer } from \"../reducers/book/bookListReducer\";\nimport { userReducer } from \"../reducers/users/userAuthReducer\";\nimport { userProfileReducer } from \"../reducers/users/userProfileReducer\";\nconst middlewares = [thunk];\nconst reducer = combineReducers({\n  bookCreated: createBookReducer,\n  booksList: bookListReducer,\n  userLogin: userReducer,\n  userProfile: userProfileReducer\n}); // Get User from localstorage and save it in Store\n\nconst userAuthFromStorage = localStorage.getItem('userAuthdata') ? JSON.parse(localStorage.getItem('userAuthdata')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userAuthFromStorage\n  }\n};\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\nexport { store };","map":{"version":3,"sources":["D:/React/Book/frontend/src/redux/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","createBookReducer","bookListReducer","userReducer","userProfileReducer","middlewares","reducer","bookCreated","booksList","userLogin","userProfile","userAuthFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AAGA,MAAMC,WAAW,GAAG,CAACN,KAAD,CAApB;AAEA,MAAMO,OAAO,GAAGT,eAAe,CAAC;AAC5BU,EAAAA,WAAW,EAAEN,iBADe;AAE5BO,EAAAA,SAAS,EAAEN,eAFiB;AAG5BO,EAAAA,SAAS,EAAEN,WAHiB;AAI5BO,EAAAA,WAAW,EAAEN;AAJe,CAAD,CAA/B,C,CAMA;;AACA,MAAMO,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,IAClBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADkB,GACiC,IAD7D;AAGA,MAAMG,YAAY,GAAG;AACjBP,EAAAA,SAAS,EAAE;AAACQ,IAAAA,QAAQ,EAAEN;AAAX;AADM,CAArB;AAIA,MAAMO,KAAK,GAAGtB,WAAW,CACrBU,OADqB,EAErBU,YAFqB,EAGrBhB,mBAAmB,CAACF,eAAe,CAAC,GAAGO,WAAJ,CAAhB,CAHE,CAAzB;AAOA,SAAQa,KAAR","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport { createBookReducer } from \"../reducers/book/createBookReducer\";\r\nimport { bookListReducer } from \"../reducers/book/bookListReducer\";\r\nimport { userReducer } from \"../reducers/users/userAuthReducer\";\r\nimport { userProfileReducer } from \"../reducers/users/userProfileReducer\";\r\n\r\n\r\nconst middlewares = [thunk]\r\n\r\nconst reducer = combineReducers({\r\n    bookCreated: createBookReducer,\r\n    booksList: bookListReducer,\r\n    userLogin: userReducer,\r\n    userProfile: userProfileReducer\r\n})\r\n// Get User from localstorage and save it in Store\r\nconst userAuthFromStorage = localStorage.getItem('userAuthdata')\r\n        ? JSON.parse(localStorage.getItem('userAuthdata')) : null   \r\n\r\nconst initialState = {\r\n    userLogin: {userInfo: userAuthFromStorage}\r\n}\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n)\r\n\r\n\r\nexport {store}"]},"metadata":{},"sourceType":"module"}